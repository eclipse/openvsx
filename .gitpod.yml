image:
  file: .gitpod.dockerfile

ports:
# Web UI (static resources)
- port: 3000
# Server (API)
- port: 8080
  onOpen: ignore
# PostgreSQL
- port: 5432
  onOpen: ignore
# Elasticsearch
- port: 9200
  onOpen: ignore
- port: 9300
  onOpen: ignore

tasks:
- init: |
    # Build all components
    yarn --cwd cli
    yarn --cwd webui
    yarn --cwd webui build:default
    server/gradlew -p server assemble downloadTestExtensions
  name: Server
  command: |
    if [[ $NPM_TOKEN ]]; then echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc; fi
    # Start Elasticsearch as background process
    $ES_HOME/bin/elasticsearch -d -p $ES_HOME/pid -Ediscovery.type=single-node -Expack.ml.enabled=false
    gp await-port 9200
    # Start the server application
    cd server
    ./scripts/generate-properties.sh
    ./gradlew runServer
- name: WebUI
  command: |
    gp await-port 8080
    # Start Express for serving frontend resources
    cd webui
    yarn start:default
- name: Publisher
  command: |
    gp await-port 8080
    # Use the CLI to publish some test extensions to the running server
    export OVSX_REGISTRY_URL=http://localhost:8080
    export OVSX_PAT=super_token
    export PUBLISHERS="DotJoshJohnson eamodio Equinusocio felixfbecker formulahendry HookyQR ms-azuretools ms-mssql ms-python ms-vscode octref redhat ritwickdey sburg vscode Wscats"
    for pub in $PUBLISHERS; do cli/lib/ovsx create-namespace $pub; done
    find server/build/test-extensions-builtin -name '*.vsix' -exec cli/lib/ovsx publish '{}' \;
    find server/build/test-extensions -name '*.vsix' -exec cli/lib/ovsx publish '{}' \;

vscode:
  extensions:
    - dbaeumer.vscode-eslint@2.1.3:1NRvj3UKNTNwmYjptmUmIw==
