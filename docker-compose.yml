services:

  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=openvsx
      - POSTGRES_PASSWORD=openvsx
    volumes:
      - /etc/localtime:/etc/localtime:ro
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - '5432:5432'
    profiles:
      - db
      - debug
      - openvsx

  elasticsearch:
    image: elasticsearch:8.7.1
    environment:
      - xpack.security.enabled=false
      - xpack.ml.enabled=false
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - cluster.routing.allocation.disk.threshold_enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 9200:9200
      - 9300:9300
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    profiles:
      - es
      - debug
      - openvsx

  kibana:
    image: kibana:8.7.1
    volumes:
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    profiles:
      - kibana

  server:
    image: openjdk:17-bullseye
    working_dir: /app
    volumes:
      - ./server:/app
      - /etc/localtime:/etc/localtime:ro
    command: >
      bash -c '
        apt-get update && 
        apt-get install -y curl findutils &&
        scripts/generate-properties.sh --docker && 
        ./gradlew assemble && 
        ./gradlew runServer'
    ports:
      - "0.0.0.0:8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - ELASTICSEARCH_HOST=elasticsearch
      - POSTGRES_HOST=postgres
    depends_on:
      elasticsearch:
        condition: service_healthy
      postgres:
        condition: service_started
    healthcheck:
      test: "curl --fail --silent localhost:8081/actuator/health | grep UP || exit 1"
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    profiles:
      - openvsx
      - backend
    
  webui:
    image: node:18
    working_dir: /app
    volumes:
      - ./webui:/app
      - /etc/localtime:/etc/localtime:ro
    command: sh -c 'yarn && yarn build && yarn build:default && yarn start:default'
    ports:
      - "0.0.0.0:3000:3000"
    depends_on:
      - server
    profiles:
      - openvsx
      - frontend
