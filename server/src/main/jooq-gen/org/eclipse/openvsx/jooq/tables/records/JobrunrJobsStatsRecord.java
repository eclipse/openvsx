/*
 * This file is generated by jOOQ.
 */
package org.eclipse.openvsx.jooq.tables.records;


import java.math.BigDecimal;

import org.eclipse.openvsx.jooq.tables.JobrunrJobsStats;
import org.jooq.Field;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JobrunrJobsStatsRecord extends TableRecordImpl<JobrunrJobsStatsRecord> implements Record10<Long, Long, Long, Long, Long, Long, BigDecimal, Long, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.jobrunr_jobs_stats.total</code>.
     */
    public void setTotal(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.jobrunr_jobs_stats.total</code>.
     */
    public Long getTotal() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.jobrunr_jobs_stats.scheduled</code>.
     */
    public void setScheduled(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.jobrunr_jobs_stats.scheduled</code>.
     */
    public Long getScheduled() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.jobrunr_jobs_stats.enqueued</code>.
     */
    public void setEnqueued(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.jobrunr_jobs_stats.enqueued</code>.
     */
    public Long getEnqueued() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.jobrunr_jobs_stats.processing</code>.
     */
    public void setProcessing(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.jobrunr_jobs_stats.processing</code>.
     */
    public Long getProcessing() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.jobrunr_jobs_stats.failed</code>.
     */
    public void setFailed(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.jobrunr_jobs_stats.failed</code>.
     */
    public Long getFailed() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>public.jobrunr_jobs_stats.succeeded</code>.
     */
    public void setSucceeded(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.jobrunr_jobs_stats.succeeded</code>.
     */
    public Long getSucceeded() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>public.jobrunr_jobs_stats.alltimesucceeded</code>.
     */
    public void setAlltimesucceeded(BigDecimal value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.jobrunr_jobs_stats.alltimesucceeded</code>.
     */
    public BigDecimal getAlltimesucceeded() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>public.jobrunr_jobs_stats.deleted</code>.
     */
    public void setDeleted(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.jobrunr_jobs_stats.deleted</code>.
     */
    public Long getDeleted() {
        return (Long) get(7);
    }

    /**
     * Setter for
     * <code>public.jobrunr_jobs_stats.nbrofbackgroundjobservers</code>.
     */
    public void setNbrofbackgroundjobservers(Long value) {
        set(8, value);
    }

    /**
     * Getter for
     * <code>public.jobrunr_jobs_stats.nbrofbackgroundjobservers</code>.
     */
    public Long getNbrofbackgroundjobservers() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>public.jobrunr_jobs_stats.nbrofrecurringjobs</code>.
     */
    public void setNbrofrecurringjobs(Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.jobrunr_jobs_stats.nbrofrecurringjobs</code>.
     */
    public Long getNbrofrecurringjobs() {
        return (Long) get(9);
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Long, Long, Long, Long, Long, Long, BigDecimal, Long, Long, Long> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Long, Long, Long, Long, Long, Long, BigDecimal, Long, Long, Long> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return JobrunrJobsStats.JOBRUNR_JOBS_STATS.TOTAL;
    }

    @Override
    public Field<Long> field2() {
        return JobrunrJobsStats.JOBRUNR_JOBS_STATS.SCHEDULED;
    }

    @Override
    public Field<Long> field3() {
        return JobrunrJobsStats.JOBRUNR_JOBS_STATS.ENQUEUED;
    }

    @Override
    public Field<Long> field4() {
        return JobrunrJobsStats.JOBRUNR_JOBS_STATS.PROCESSING;
    }

    @Override
    public Field<Long> field5() {
        return JobrunrJobsStats.JOBRUNR_JOBS_STATS.FAILED;
    }

    @Override
    public Field<Long> field6() {
        return JobrunrJobsStats.JOBRUNR_JOBS_STATS.SUCCEEDED;
    }

    @Override
    public Field<BigDecimal> field7() {
        return JobrunrJobsStats.JOBRUNR_JOBS_STATS.ALLTIMESUCCEEDED;
    }

    @Override
    public Field<Long> field8() {
        return JobrunrJobsStats.JOBRUNR_JOBS_STATS.DELETED;
    }

    @Override
    public Field<Long> field9() {
        return JobrunrJobsStats.JOBRUNR_JOBS_STATS.NBROFBACKGROUNDJOBSERVERS;
    }

    @Override
    public Field<Long> field10() {
        return JobrunrJobsStats.JOBRUNR_JOBS_STATS.NBROFRECURRINGJOBS;
    }

    @Override
    public Long component1() {
        return getTotal();
    }

    @Override
    public Long component2() {
        return getScheduled();
    }

    @Override
    public Long component3() {
        return getEnqueued();
    }

    @Override
    public Long component4() {
        return getProcessing();
    }

    @Override
    public Long component5() {
        return getFailed();
    }

    @Override
    public Long component6() {
        return getSucceeded();
    }

    @Override
    public BigDecimal component7() {
        return getAlltimesucceeded();
    }

    @Override
    public Long component8() {
        return getDeleted();
    }

    @Override
    public Long component9() {
        return getNbrofbackgroundjobservers();
    }

    @Override
    public Long component10() {
        return getNbrofrecurringjobs();
    }

    @Override
    public Long value1() {
        return getTotal();
    }

    @Override
    public Long value2() {
        return getScheduled();
    }

    @Override
    public Long value3() {
        return getEnqueued();
    }

    @Override
    public Long value4() {
        return getProcessing();
    }

    @Override
    public Long value5() {
        return getFailed();
    }

    @Override
    public Long value6() {
        return getSucceeded();
    }

    @Override
    public BigDecimal value7() {
        return getAlltimesucceeded();
    }

    @Override
    public Long value8() {
        return getDeleted();
    }

    @Override
    public Long value9() {
        return getNbrofbackgroundjobservers();
    }

    @Override
    public Long value10() {
        return getNbrofrecurringjobs();
    }

    @Override
    public JobrunrJobsStatsRecord value1(Long value) {
        setTotal(value);
        return this;
    }

    @Override
    public JobrunrJobsStatsRecord value2(Long value) {
        setScheduled(value);
        return this;
    }

    @Override
    public JobrunrJobsStatsRecord value3(Long value) {
        setEnqueued(value);
        return this;
    }

    @Override
    public JobrunrJobsStatsRecord value4(Long value) {
        setProcessing(value);
        return this;
    }

    @Override
    public JobrunrJobsStatsRecord value5(Long value) {
        setFailed(value);
        return this;
    }

    @Override
    public JobrunrJobsStatsRecord value6(Long value) {
        setSucceeded(value);
        return this;
    }

    @Override
    public JobrunrJobsStatsRecord value7(BigDecimal value) {
        setAlltimesucceeded(value);
        return this;
    }

    @Override
    public JobrunrJobsStatsRecord value8(Long value) {
        setDeleted(value);
        return this;
    }

    @Override
    public JobrunrJobsStatsRecord value9(Long value) {
        setNbrofbackgroundjobservers(value);
        return this;
    }

    @Override
    public JobrunrJobsStatsRecord value10(Long value) {
        setNbrofrecurringjobs(value);
        return this;
    }

    @Override
    public JobrunrJobsStatsRecord values(Long value1, Long value2, Long value3, Long value4, Long value5, Long value6, BigDecimal value7, Long value8, Long value9, Long value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JobrunrJobsStatsRecord
     */
    public JobrunrJobsStatsRecord() {
        super(JobrunrJobsStats.JOBRUNR_JOBS_STATS);
    }

    /**
     * Create a detached, initialised JobrunrJobsStatsRecord
     */
    public JobrunrJobsStatsRecord(Long total, Long scheduled, Long enqueued, Long processing, Long failed, Long succeeded, BigDecimal alltimesucceeded, Long deleted, Long nbrofbackgroundjobservers, Long nbrofrecurringjobs) {
        super(JobrunrJobsStats.JOBRUNR_JOBS_STATS);

        setTotal(total);
        setScheduled(scheduled);
        setEnqueued(enqueued);
        setProcessing(processing);
        setFailed(failed);
        setSucceeded(succeeded);
        setAlltimesucceeded(alltimesucceeded);
        setDeleted(deleted);
        setNbrofbackgroundjobservers(nbrofbackgroundjobservers);
        setNbrofrecurringjobs(nbrofrecurringjobs);
        resetChangedOnNotNull();
    }
}
