/*
 * This file is generated by jOOQ.
 */
package org.eclipse.openvsx.jooq.tables.records;


import org.eclipse.openvsx.jooq.tables.AdminStatistics;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AdminStatisticsRecord extends UpdatableRecordImpl<AdminStatisticsRecord> implements Record9<Long, Integer, Integer, Long, Long, Long, Long, Double, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.admin_statistics.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.admin_statistics.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.admin_statistics.year</code>.
     */
    public void setYear(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.admin_statistics.year</code>.
     */
    public Integer getYear() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.admin_statistics.month</code>.
     */
    public void setMonth(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.admin_statistics.month</code>.
     */
    public Integer getMonth() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.admin_statistics.extensions</code>.
     */
    public void setExtensions(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.admin_statistics.extensions</code>.
     */
    public Long getExtensions() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.admin_statistics.downloads</code>.
     */
    public void setDownloads(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.admin_statistics.downloads</code>.
     */
    public Long getDownloads() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>public.admin_statistics.downloads_total</code>.
     */
    public void setDownloadsTotal(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.admin_statistics.downloads_total</code>.
     */
    public Long getDownloadsTotal() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>public.admin_statistics.publishers</code>.
     */
    public void setPublishers(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.admin_statistics.publishers</code>.
     */
    public Long getPublishers() {
        return (Long) get(6);
    }

    /**
     * Setter for
     * <code>public.admin_statistics.average_reviews_per_extension</code>.
     */
    public void setAverageReviewsPerExtension(Double value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>public.admin_statistics.average_reviews_per_extension</code>.
     */
    public Double getAverageReviewsPerExtension() {
        return (Double) get(7);
    }

    /**
     * Setter for <code>public.admin_statistics.namespace_owners</code>.
     */
    public void setNamespaceOwners(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.admin_statistics.namespace_owners</code>.
     */
    public Long getNamespaceOwners() {
        return (Long) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, Integer, Integer, Long, Long, Long, Long, Double, Long> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Long, Integer, Integer, Long, Long, Long, Long, Double, Long> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return AdminStatistics.ADMIN_STATISTICS.ID;
    }

    @Override
    public Field<Integer> field2() {
        return AdminStatistics.ADMIN_STATISTICS.YEAR;
    }

    @Override
    public Field<Integer> field3() {
        return AdminStatistics.ADMIN_STATISTICS.MONTH;
    }

    @Override
    public Field<Long> field4() {
        return AdminStatistics.ADMIN_STATISTICS.EXTENSIONS;
    }

    @Override
    public Field<Long> field5() {
        return AdminStatistics.ADMIN_STATISTICS.DOWNLOADS;
    }

    @Override
    public Field<Long> field6() {
        return AdminStatistics.ADMIN_STATISTICS.DOWNLOADS_TOTAL;
    }

    @Override
    public Field<Long> field7() {
        return AdminStatistics.ADMIN_STATISTICS.PUBLISHERS;
    }

    @Override
    public Field<Double> field8() {
        return AdminStatistics.ADMIN_STATISTICS.AVERAGE_REVIEWS_PER_EXTENSION;
    }

    @Override
    public Field<Long> field9() {
        return AdminStatistics.ADMIN_STATISTICS.NAMESPACE_OWNERS;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getYear();
    }

    @Override
    public Integer component3() {
        return getMonth();
    }

    @Override
    public Long component4() {
        return getExtensions();
    }

    @Override
    public Long component5() {
        return getDownloads();
    }

    @Override
    public Long component6() {
        return getDownloadsTotal();
    }

    @Override
    public Long component7() {
        return getPublishers();
    }

    @Override
    public Double component8() {
        return getAverageReviewsPerExtension();
    }

    @Override
    public Long component9() {
        return getNamespaceOwners();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getYear();
    }

    @Override
    public Integer value3() {
        return getMonth();
    }

    @Override
    public Long value4() {
        return getExtensions();
    }

    @Override
    public Long value5() {
        return getDownloads();
    }

    @Override
    public Long value6() {
        return getDownloadsTotal();
    }

    @Override
    public Long value7() {
        return getPublishers();
    }

    @Override
    public Double value8() {
        return getAverageReviewsPerExtension();
    }

    @Override
    public Long value9() {
        return getNamespaceOwners();
    }

    @Override
    public AdminStatisticsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AdminStatisticsRecord value2(Integer value) {
        setYear(value);
        return this;
    }

    @Override
    public AdminStatisticsRecord value3(Integer value) {
        setMonth(value);
        return this;
    }

    @Override
    public AdminStatisticsRecord value4(Long value) {
        setExtensions(value);
        return this;
    }

    @Override
    public AdminStatisticsRecord value5(Long value) {
        setDownloads(value);
        return this;
    }

    @Override
    public AdminStatisticsRecord value6(Long value) {
        setDownloadsTotal(value);
        return this;
    }

    @Override
    public AdminStatisticsRecord value7(Long value) {
        setPublishers(value);
        return this;
    }

    @Override
    public AdminStatisticsRecord value8(Double value) {
        setAverageReviewsPerExtension(value);
        return this;
    }

    @Override
    public AdminStatisticsRecord value9(Long value) {
        setNamespaceOwners(value);
        return this;
    }

    @Override
    public AdminStatisticsRecord values(Long value1, Integer value2, Integer value3, Long value4, Long value5, Long value6, Long value7, Double value8, Long value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AdminStatisticsRecord
     */
    public AdminStatisticsRecord() {
        super(AdminStatistics.ADMIN_STATISTICS);
    }

    /**
     * Create a detached, initialised AdminStatisticsRecord
     */
    public AdminStatisticsRecord(Long id, Integer year, Integer month, Long extensions, Long downloads, Long downloadsTotal, Long publishers, Double averageReviewsPerExtension, Long namespaceOwners) {
        super(AdminStatistics.ADMIN_STATISTICS);

        setId(id);
        setYear(year);
        setMonth(month);
        setExtensions(extensions);
        setDownloads(downloads);
        setDownloadsTotal(downloadsTotal);
        setPublishers(publishers);
        setAverageReviewsPerExtension(averageReviewsPerExtension);
        setNamespaceOwners(namespaceOwners);
        resetChangedOnNotNull();
    }
}
