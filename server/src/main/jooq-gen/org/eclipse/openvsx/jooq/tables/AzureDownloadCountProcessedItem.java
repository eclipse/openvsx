/*
 * This file is generated by jOOQ.
 */
package org.eclipse.openvsx.jooq.tables;


import java.time.LocalDateTime;
import java.util.function.Function;

import org.eclipse.openvsx.jooq.Keys;
import org.eclipse.openvsx.jooq.Public;
import org.eclipse.openvsx.jooq.tables.records.AzureDownloadCountProcessedItemRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Function5;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Records;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.SelectField;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AzureDownloadCountProcessedItem extends TableImpl<AzureDownloadCountProcessedItemRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>public.azure_download_count_processed_item</code>
     */
    public static final AzureDownloadCountProcessedItem AZURE_DOWNLOAD_COUNT_PROCESSED_ITEM = new AzureDownloadCountProcessedItem();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AzureDownloadCountProcessedItemRecord> getRecordType() {
        return AzureDownloadCountProcessedItemRecord.class;
    }

    /**
     * The column <code>public.azure_download_count_processed_item.id</code>.
     */
    public final TableField<AzureDownloadCountProcessedItemRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.azure_download_count_processed_item.name</code>.
     */
    public final TableField<AzureDownloadCountProcessedItemRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column
     * <code>public.azure_download_count_processed_item.processed_on</code>.
     */
    public final TableField<AzureDownloadCountProcessedItemRecord, LocalDateTime> PROCESSED_ON = createField(DSL.name("processed_on"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column
     * <code>public.azure_download_count_processed_item.execution_time</code>.
     */
    public final TableField<AzureDownloadCountProcessedItemRecord, Integer> EXECUTION_TIME = createField(DSL.name("execution_time"), SQLDataType.INTEGER, this, "");

    /**
     * The column
     * <code>public.azure_download_count_processed_item.success</code>.
     */
    public final TableField<AzureDownloadCountProcessedItemRecord, Boolean> SUCCESS = createField(DSL.name("success"), SQLDataType.BOOLEAN.nullable(false), this, "");

    private AzureDownloadCountProcessedItem(Name alias, Table<AzureDownloadCountProcessedItemRecord> aliased) {
        this(alias, aliased, null);
    }

    private AzureDownloadCountProcessedItem(Name alias, Table<AzureDownloadCountProcessedItemRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.azure_download_count_processed_item</code>
     * table reference
     */
    public AzureDownloadCountProcessedItem(String alias) {
        this(DSL.name(alias), AZURE_DOWNLOAD_COUNT_PROCESSED_ITEM);
    }

    /**
     * Create an aliased <code>public.azure_download_count_processed_item</code>
     * table reference
     */
    public AzureDownloadCountProcessedItem(Name alias) {
        this(alias, AZURE_DOWNLOAD_COUNT_PROCESSED_ITEM);
    }

    /**
     * Create a <code>public.azure_download_count_processed_item</code> table
     * reference
     */
    public AzureDownloadCountProcessedItem() {
        this(DSL.name("azure_download_count_processed_item"), null);
    }

    public <O extends Record> AzureDownloadCountProcessedItem(Table<O> child, ForeignKey<O, AzureDownloadCountProcessedItemRecord> key) {
        super(child, key, AZURE_DOWNLOAD_COUNT_PROCESSED_ITEM);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public UniqueKey<AzureDownloadCountProcessedItemRecord> getPrimaryKey() {
        return Keys.AZURE_DOWNLOAD_COUNT_PROCESSED_ITEM_PKEY;
    }

    @Override
    public AzureDownloadCountProcessedItem as(String alias) {
        return new AzureDownloadCountProcessedItem(DSL.name(alias), this);
    }

    @Override
    public AzureDownloadCountProcessedItem as(Name alias) {
        return new AzureDownloadCountProcessedItem(alias, this);
    }

    @Override
    public AzureDownloadCountProcessedItem as(Table<?> alias) {
        return new AzureDownloadCountProcessedItem(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public AzureDownloadCountProcessedItem rename(String name) {
        return new AzureDownloadCountProcessedItem(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AzureDownloadCountProcessedItem rename(Name name) {
        return new AzureDownloadCountProcessedItem(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public AzureDownloadCountProcessedItem rename(Table<?> name) {
        return new AzureDownloadCountProcessedItem(name.getQualifiedName(), null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, LocalDateTime, Integer, Boolean> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Function)}.
     */
    public <U> SelectField<U> mapping(Function5<? super Long, ? super String, ? super LocalDateTime, ? super Integer, ? super Boolean, ? extends U> from) {
        return convertFrom(Records.mapping(from));
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Class,
     * Function)}.
     */
    public <U> SelectField<U> mapping(Class<U> toType, Function5<? super Long, ? super String, ? super LocalDateTime, ? super Integer, ? super Boolean, ? extends U> from) {
        return convertFrom(toType, Records.mapping(from));
    }
}
