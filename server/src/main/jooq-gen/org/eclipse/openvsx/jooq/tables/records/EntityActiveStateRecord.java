/*
 * This file is generated by jOOQ.
 */
package org.eclipse.openvsx.jooq.tables.records;


import java.time.LocalDateTime;

import org.eclipse.openvsx.jooq.tables.EntityActiveState;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EntityActiveStateRecord extends UpdatableRecordImpl<EntityActiveStateRecord> implements Record5<Long, Long, String, Boolean, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.entity_active_state.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.entity_active_state.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.entity_active_state.entity_id</code>.
     */
    public void setEntityId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.entity_active_state.entity_id</code>.
     */
    public Long getEntityId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.entity_active_state.entity_type</code>.
     */
    public void setEntityType(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.entity_active_state.entity_type</code>.
     */
    public String getEntityType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.entity_active_state.active</code>.
     */
    public void setActive(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.entity_active_state.active</code>.
     */
    public Boolean getActive() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>public.entity_active_state.timestamp</code>.
     */
    public void setTimestamp(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.entity_active_state.timestamp</code>.
     */
    public LocalDateTime getTimestamp() {
        return (LocalDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, String, Boolean, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Long, String, Boolean, LocalDateTime> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return EntityActiveState.ENTITY_ACTIVE_STATE.ID;
    }

    @Override
    public Field<Long> field2() {
        return EntityActiveState.ENTITY_ACTIVE_STATE.ENTITY_ID;
    }

    @Override
    public Field<String> field3() {
        return EntityActiveState.ENTITY_ACTIVE_STATE.ENTITY_TYPE;
    }

    @Override
    public Field<Boolean> field4() {
        return EntityActiveState.ENTITY_ACTIVE_STATE.ACTIVE;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return EntityActiveState.ENTITY_ACTIVE_STATE.TIMESTAMP;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getEntityId();
    }

    @Override
    public String component3() {
        return getEntityType();
    }

    @Override
    public Boolean component4() {
        return getActive();
    }

    @Override
    public LocalDateTime component5() {
        return getTimestamp();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getEntityId();
    }

    @Override
    public String value3() {
        return getEntityType();
    }

    @Override
    public Boolean value4() {
        return getActive();
    }

    @Override
    public LocalDateTime value5() {
        return getTimestamp();
    }

    @Override
    public EntityActiveStateRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public EntityActiveStateRecord value2(Long value) {
        setEntityId(value);
        return this;
    }

    @Override
    public EntityActiveStateRecord value3(String value) {
        setEntityType(value);
        return this;
    }

    @Override
    public EntityActiveStateRecord value4(Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public EntityActiveStateRecord value5(LocalDateTime value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public EntityActiveStateRecord values(Long value1, Long value2, String value3, Boolean value4, LocalDateTime value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EntityActiveStateRecord
     */
    public EntityActiveStateRecord() {
        super(EntityActiveState.ENTITY_ACTIVE_STATE);
    }

    /**
     * Create a detached, initialised EntityActiveStateRecord
     */
    public EntityActiveStateRecord(Long id, Long entityId, String entityType, Boolean active, LocalDateTime timestamp) {
        super(EntityActiveState.ENTITY_ACTIVE_STATE);

        setId(id);
        setEntityId(entityId);
        setEntityType(entityType);
        setActive(active);
        setTimestamp(timestamp);
        resetChangedOnNotNull();
    }
}
