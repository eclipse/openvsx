/*
 * This file is generated by jOOQ.
 */
package org.eclipse.openvsx.jooq;


import org.eclipse.openvsx.jooq.tables.AdminStatistics;
import org.eclipse.openvsx.jooq.tables.AdminStatisticsExtensionsByRating;
import org.eclipse.openvsx.jooq.tables.AdminStatisticsPublishersByExtensionsPublished;
import org.eclipse.openvsx.jooq.tables.AdminStatisticsTopMostActivePublishingUsers;
import org.eclipse.openvsx.jooq.tables.AdminStatisticsTopMostDownloadedExtensions;
import org.eclipse.openvsx.jooq.tables.AdminStatisticsTopNamespaceExtensionVersions;
import org.eclipse.openvsx.jooq.tables.AdminStatisticsTopNamespaceExtensions;
import org.eclipse.openvsx.jooq.tables.AzureDownloadCountProcessedItem;
import org.eclipse.openvsx.jooq.tables.Download;
import org.eclipse.openvsx.jooq.tables.EntityActiveState;
import org.eclipse.openvsx.jooq.tables.Extension;
import org.eclipse.openvsx.jooq.tables.ExtensionReview;
import org.eclipse.openvsx.jooq.tables.ExtensionVersion;
import org.eclipse.openvsx.jooq.tables.FileResource;
import org.eclipse.openvsx.jooq.tables.FlywaySchemaHistory;
import org.eclipse.openvsx.jooq.tables.JobrunrBackgroundjobservers;
import org.eclipse.openvsx.jooq.tables.JobrunrJobs;
import org.eclipse.openvsx.jooq.tables.JobrunrMetadata;
import org.eclipse.openvsx.jooq.tables.JobrunrMigrations;
import org.eclipse.openvsx.jooq.tables.JobrunrRecurringJobs;
import org.eclipse.openvsx.jooq.tables.MigrationItem;
import org.eclipse.openvsx.jooq.tables.Namespace;
import org.eclipse.openvsx.jooq.tables.NamespaceMembership;
import org.eclipse.openvsx.jooq.tables.NamespaceSocialLinks;
import org.eclipse.openvsx.jooq.tables.PersistedLog;
import org.eclipse.openvsx.jooq.tables.PersonalAccessToken;
import org.eclipse.openvsx.jooq.tables.Shedlock;
import org.eclipse.openvsx.jooq.tables.SpringSession;
import org.eclipse.openvsx.jooq.tables.SpringSessionAttributes;
import org.eclipse.openvsx.jooq.tables.UserData;
import org.eclipse.openvsx.jooq.tables.records.AdminStatisticsExtensionsByRatingRecord;
import org.eclipse.openvsx.jooq.tables.records.AdminStatisticsPublishersByExtensionsPublishedRecord;
import org.eclipse.openvsx.jooq.tables.records.AdminStatisticsRecord;
import org.eclipse.openvsx.jooq.tables.records.AdminStatisticsTopMostActivePublishingUsersRecord;
import org.eclipse.openvsx.jooq.tables.records.AdminStatisticsTopMostDownloadedExtensionsRecord;
import org.eclipse.openvsx.jooq.tables.records.AdminStatisticsTopNamespaceExtensionVersionsRecord;
import org.eclipse.openvsx.jooq.tables.records.AdminStatisticsTopNamespaceExtensionsRecord;
import org.eclipse.openvsx.jooq.tables.records.AzureDownloadCountProcessedItemRecord;
import org.eclipse.openvsx.jooq.tables.records.DownloadRecord;
import org.eclipse.openvsx.jooq.tables.records.EntityActiveStateRecord;
import org.eclipse.openvsx.jooq.tables.records.ExtensionRecord;
import org.eclipse.openvsx.jooq.tables.records.ExtensionReviewRecord;
import org.eclipse.openvsx.jooq.tables.records.ExtensionVersionRecord;
import org.eclipse.openvsx.jooq.tables.records.FileResourceRecord;
import org.eclipse.openvsx.jooq.tables.records.FlywaySchemaHistoryRecord;
import org.eclipse.openvsx.jooq.tables.records.JobrunrBackgroundjobserversRecord;
import org.eclipse.openvsx.jooq.tables.records.JobrunrJobsRecord;
import org.eclipse.openvsx.jooq.tables.records.JobrunrMetadataRecord;
import org.eclipse.openvsx.jooq.tables.records.JobrunrMigrationsRecord;
import org.eclipse.openvsx.jooq.tables.records.JobrunrRecurringJobsRecord;
import org.eclipse.openvsx.jooq.tables.records.MigrationItemRecord;
import org.eclipse.openvsx.jooq.tables.records.NamespaceMembershipRecord;
import org.eclipse.openvsx.jooq.tables.records.NamespaceRecord;
import org.eclipse.openvsx.jooq.tables.records.NamespaceSocialLinksRecord;
import org.eclipse.openvsx.jooq.tables.records.PersistedLogRecord;
import org.eclipse.openvsx.jooq.tables.records.PersonalAccessTokenRecord;
import org.eclipse.openvsx.jooq.tables.records.ShedlockRecord;
import org.eclipse.openvsx.jooq.tables.records.SpringSessionAttributesRecord;
import org.eclipse.openvsx.jooq.tables.records.SpringSessionRecord;
import org.eclipse.openvsx.jooq.tables.records.UserDataRecord;
import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AdminStatisticsRecord> ADMIN_STATISTICS_PKEY = Internal.createUniqueKey(AdminStatistics.ADMIN_STATISTICS, DSL.name("admin_statistics_pkey"), new TableField[] { AdminStatistics.ADMIN_STATISTICS.ID }, true);
    public static final UniqueKey<AzureDownloadCountProcessedItemRecord> AZURE_DOWNLOAD_COUNT_PROCESSED_ITEM_PKEY = Internal.createUniqueKey(AzureDownloadCountProcessedItem.AZURE_DOWNLOAD_COUNT_PROCESSED_ITEM, DSL.name("azure_download_count_processed_item_pkey"), new TableField[] { AzureDownloadCountProcessedItem.AZURE_DOWNLOAD_COUNT_PROCESSED_ITEM.ID }, true);
    public static final UniqueKey<DownloadRecord> DOWNLOAD_PKEY = Internal.createUniqueKey(Download.DOWNLOAD, DSL.name("download_pkey"), new TableField[] { Download.DOWNLOAD.ID }, true);
    public static final UniqueKey<EntityActiveStateRecord> ENTITY_ACTIVE_STATE_PKEY = Internal.createUniqueKey(EntityActiveState.ENTITY_ACTIVE_STATE, DSL.name("entity_active_state_pkey"), new TableField[] { EntityActiveState.ENTITY_ACTIVE_STATE.ID }, true);
    public static final UniqueKey<ExtensionRecord> EXTENSION_PKEY = Internal.createUniqueKey(Extension.EXTENSION, DSL.name("extension_pkey"), new TableField[] { Extension.EXTENSION.ID }, true);
    public static final UniqueKey<ExtensionRecord> UNIQUE_EXTENSION_PUBLIC_ID = Internal.createUniqueKey(Extension.EXTENSION, DSL.name("unique_extension_public_id"), new TableField[] { Extension.EXTENSION.PUBLIC_ID }, true);
    public static final UniqueKey<ExtensionReviewRecord> EXTENSION_REVIEW_PKEY = Internal.createUniqueKey(ExtensionReview.EXTENSION_REVIEW, DSL.name("extension_review_pkey"), new TableField[] { ExtensionReview.EXTENSION_REVIEW.ID }, true);
    public static final UniqueKey<ExtensionVersionRecord> EXTENSION_VERSION_PKEY = Internal.createUniqueKey(ExtensionVersion.EXTENSION_VERSION, DSL.name("extension_version_pkey"), new TableField[] { ExtensionVersion.EXTENSION_VERSION.ID }, true);
    public static final UniqueKey<ExtensionVersionRecord> UNIQUE_EXTENSION_VERSION = Internal.createUniqueKey(ExtensionVersion.EXTENSION_VERSION, DSL.name("unique_extension_version"), new TableField[] { ExtensionVersion.EXTENSION_VERSION.EXTENSION_ID, ExtensionVersion.EXTENSION_VERSION.TARGET_PLATFORM, ExtensionVersion.EXTENSION_VERSION.VERSION }, true);
    public static final UniqueKey<FileResourceRecord> FILE_RESOURCE_PKEY = Internal.createUniqueKey(FileResource.FILE_RESOURCE, DSL.name("file_resource_pkey"), new TableField[] { FileResource.FILE_RESOURCE.ID }, true);
    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<JobrunrBackgroundjobserversRecord> JOBRUNR_BACKGROUNDJOBSERVERS_PKEY = Internal.createUniqueKey(JobrunrBackgroundjobservers.JOBRUNR_BACKGROUNDJOBSERVERS, DSL.name("jobrunr_backgroundjobservers_pkey"), new TableField[] { JobrunrBackgroundjobservers.JOBRUNR_BACKGROUNDJOBSERVERS.ID }, true);
    public static final UniqueKey<JobrunrJobsRecord> JOBRUNR_JOBS_PKEY = Internal.createUniqueKey(JobrunrJobs.JOBRUNR_JOBS, DSL.name("jobrunr_jobs_pkey"), new TableField[] { JobrunrJobs.JOBRUNR_JOBS.ID }, true);
    public static final UniqueKey<JobrunrMetadataRecord> JOBRUNR_METADATA_PKEY = Internal.createUniqueKey(JobrunrMetadata.JOBRUNR_METADATA, DSL.name("jobrunr_metadata_pkey"), new TableField[] { JobrunrMetadata.JOBRUNR_METADATA.ID }, true);
    public static final UniqueKey<JobrunrMigrationsRecord> JOBRUNR_MIGRATIONS_PKEY = Internal.createUniqueKey(JobrunrMigrations.JOBRUNR_MIGRATIONS, DSL.name("jobrunr_migrations_pkey"), new TableField[] { JobrunrMigrations.JOBRUNR_MIGRATIONS.ID }, true);
    public static final UniqueKey<JobrunrRecurringJobsRecord> JOBRUNR_RECURRING_JOBS_PKEY = Internal.createUniqueKey(JobrunrRecurringJobs.JOBRUNR_RECURRING_JOBS, DSL.name("jobrunr_recurring_jobs_pkey"), new TableField[] { JobrunrRecurringJobs.JOBRUNR_RECURRING_JOBS.ID }, true);
    public static final UniqueKey<MigrationItemRecord> MIGRATION_ITEM_PKEY = Internal.createUniqueKey(MigrationItem.MIGRATION_ITEM, DSL.name("migration_item_pkey"), new TableField[] { MigrationItem.MIGRATION_ITEM.ID }, true);
    public static final UniqueKey<NamespaceRecord> NAMESPACE_PKEY = Internal.createUniqueKey(Namespace.NAMESPACE, DSL.name("namespace_pkey"), new TableField[] { Namespace.NAMESPACE.ID }, true);
    public static final UniqueKey<NamespaceRecord> UNIQUE_NAMESPACE_PUBLIC_ID = Internal.createUniqueKey(Namespace.NAMESPACE, DSL.name("unique_namespace_public_id"), new TableField[] { Namespace.NAMESPACE.PUBLIC_ID }, true);
    public static final UniqueKey<NamespaceMembershipRecord> NAMESPACE_MEMBERSHIP_PKEY = Internal.createUniqueKey(NamespaceMembership.NAMESPACE_MEMBERSHIP, DSL.name("namespace_membership_pkey"), new TableField[] { NamespaceMembership.NAMESPACE_MEMBERSHIP.ID }, true);
    public static final UniqueKey<PersistedLogRecord> PERSISTED_LOG_PKEY = Internal.createUniqueKey(PersistedLog.PERSISTED_LOG, DSL.name("persisted_log_pkey"), new TableField[] { PersistedLog.PERSISTED_LOG.ID }, true);
    public static final UniqueKey<PersonalAccessTokenRecord> PERSONAL_ACCESS_TOKEN_PKEY = Internal.createUniqueKey(PersonalAccessToken.PERSONAL_ACCESS_TOKEN, DSL.name("personal_access_token_pkey"), new TableField[] { PersonalAccessToken.PERSONAL_ACCESS_TOKEN.ID }, true);
    public static final UniqueKey<PersonalAccessTokenRecord> UKJEUD5MSSQBQKID58RD2K1INOF = Internal.createUniqueKey(PersonalAccessToken.PERSONAL_ACCESS_TOKEN, DSL.name("ukjeud5mssqbqkid58rd2k1inof"), new TableField[] { PersonalAccessToken.PERSONAL_ACCESS_TOKEN.VALUE }, true);
    public static final UniqueKey<ShedlockRecord> SHEDLOCK_PKEY = Internal.createUniqueKey(Shedlock.SHEDLOCK, DSL.name("shedlock_pkey"), new TableField[] { Shedlock.SHEDLOCK.NAME }, true);
    public static final UniqueKey<SpringSessionRecord> SPRING_SESSION_PK = Internal.createUniqueKey(SpringSession.SPRING_SESSION, DSL.name("spring_session_pk"), new TableField[] { SpringSession.SPRING_SESSION.PRIMARY_ID }, true);
    public static final UniqueKey<SpringSessionAttributesRecord> SPRING_SESSION_ATTRIBUTES_PK = Internal.createUniqueKey(SpringSessionAttributes.SPRING_SESSION_ATTRIBUTES, DSL.name("spring_session_attributes_pk"), new TableField[] { SpringSessionAttributes.SPRING_SESSION_ATTRIBUTES.SESSION_PRIMARY_ID, SpringSessionAttributes.SPRING_SESSION_ATTRIBUTES.ATTRIBUTE_NAME }, true);
    public static final UniqueKey<UserDataRecord> USER_DATA_PKEY = Internal.createUniqueKey(UserData.USER_DATA, DSL.name("user_data_pkey"), new TableField[] { UserData.USER_DATA.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AdminStatisticsExtensionsByRatingRecord, AdminStatisticsRecord> ADMIN_STATISTICS_EXTENSIONS_BY_RATING__ADMIN_STATISTICS_EXTENSIONS_BY_RATING_FKEY = Internal.createForeignKey(AdminStatisticsExtensionsByRating.ADMIN_STATISTICS_EXTENSIONS_BY_RATING, DSL.name("admin_statistics_extensions_by_rating_fkey"), new TableField[] { AdminStatisticsExtensionsByRating.ADMIN_STATISTICS_EXTENSIONS_BY_RATING.ADMIN_STATISTICS_ID }, Keys.ADMIN_STATISTICS_PKEY, new TableField[] { AdminStatistics.ADMIN_STATISTICS.ID }, true);
    public static final ForeignKey<AdminStatisticsPublishersByExtensionsPublishedRecord, AdminStatisticsRecord> ADMIN_STATISTICS_PUBLISHERS_BY_EXTENSIONS_PUBLISHED__ADMIN_STATISTICS_PUBLISHERS_BY_EXTENSIONS_PUBLISHED_FKEY = Internal.createForeignKey(AdminStatisticsPublishersByExtensionsPublished.ADMIN_STATISTICS_PUBLISHERS_BY_EXTENSIONS_PUBLISHED, DSL.name("admin_statistics_publishers_by_extensions_published_fkey"), new TableField[] { AdminStatisticsPublishersByExtensionsPublished.ADMIN_STATISTICS_PUBLISHERS_BY_EXTENSIONS_PUBLISHED.ADMIN_STATISTICS_ID }, Keys.ADMIN_STATISTICS_PKEY, new TableField[] { AdminStatistics.ADMIN_STATISTICS.ID }, true);
    public static final ForeignKey<AdminStatisticsTopMostActivePublishingUsersRecord, AdminStatisticsRecord> ADMIN_STATISTICS_TOP_MOST_ACTIVE_PUBLISHING_USERS__ADMIN_STATISTICS_TOP_MOST_ACTIVE_PUBLISHING_USERS_FKEY = Internal.createForeignKey(AdminStatisticsTopMostActivePublishingUsers.ADMIN_STATISTICS_TOP_MOST_ACTIVE_PUBLISHING_USERS, DSL.name("admin_statistics_top_most_active_publishing_users_fkey"), new TableField[] { AdminStatisticsTopMostActivePublishingUsers.ADMIN_STATISTICS_TOP_MOST_ACTIVE_PUBLISHING_USERS.ADMIN_STATISTICS_ID }, Keys.ADMIN_STATISTICS_PKEY, new TableField[] { AdminStatistics.ADMIN_STATISTICS.ID }, true);
    public static final ForeignKey<AdminStatisticsTopMostDownloadedExtensionsRecord, AdminStatisticsRecord> ADMIN_STATISTICS_TOP_MOST_DOWNLOADED_EXTENSIONS__ADMIN_STATISTICS_TOP_MOST_DOWNLOADED_EXTENSIONS_FKEY = Internal.createForeignKey(AdminStatisticsTopMostDownloadedExtensions.ADMIN_STATISTICS_TOP_MOST_DOWNLOADED_EXTENSIONS, DSL.name("admin_statistics_top_most_downloaded_extensions_fkey"), new TableField[] { AdminStatisticsTopMostDownloadedExtensions.ADMIN_STATISTICS_TOP_MOST_DOWNLOADED_EXTENSIONS.ADMIN_STATISTICS_ID }, Keys.ADMIN_STATISTICS_PKEY, new TableField[] { AdminStatistics.ADMIN_STATISTICS.ID }, true);
    public static final ForeignKey<AdminStatisticsTopNamespaceExtensionVersionsRecord, AdminStatisticsRecord> ADMIN_STATISTICS_TOP_NAMESPACE_EXTENSION_VERSIONS__ADMIN_STATISTICS_TOP_NAMESPACE_EXTENSION_VERSIONS_FKEY = Internal.createForeignKey(AdminStatisticsTopNamespaceExtensionVersions.ADMIN_STATISTICS_TOP_NAMESPACE_EXTENSION_VERSIONS, DSL.name("admin_statistics_top_namespace_extension_versions_fkey"), new TableField[] { AdminStatisticsTopNamespaceExtensionVersions.ADMIN_STATISTICS_TOP_NAMESPACE_EXTENSION_VERSIONS.ADMIN_STATISTICS_ID }, Keys.ADMIN_STATISTICS_PKEY, new TableField[] { AdminStatistics.ADMIN_STATISTICS.ID }, true);
    public static final ForeignKey<AdminStatisticsTopNamespaceExtensionsRecord, AdminStatisticsRecord> ADMIN_STATISTICS_TOP_NAMESPACE_EXTENSIONS__ADMIN_STATISTICS_TOP_NAMESPACE_EXTENSIONS_FKEY = Internal.createForeignKey(AdminStatisticsTopNamespaceExtensions.ADMIN_STATISTICS_TOP_NAMESPACE_EXTENSIONS, DSL.name("admin_statistics_top_namespace_extensions_fkey"), new TableField[] { AdminStatisticsTopNamespaceExtensions.ADMIN_STATISTICS_TOP_NAMESPACE_EXTENSIONS.ADMIN_STATISTICS_ID }, Keys.ADMIN_STATISTICS_PKEY, new TableField[] { AdminStatistics.ADMIN_STATISTICS.ID }, true);
    public static final ForeignKey<ExtensionRecord, NamespaceRecord> EXTENSION__FK64IMD3NRJ67D50TPKJS94NGMN = Internal.createForeignKey(Extension.EXTENSION, DSL.name("fk64imd3nrj67d50tpkjs94ngmn"), new TableField[] { Extension.EXTENSION.NAMESPACE_ID }, Keys.NAMESPACE_PKEY, new TableField[] { Namespace.NAMESPACE.ID }, true);
    public static final ForeignKey<ExtensionReviewRecord, ExtensionRecord> EXTENSION_REVIEW__FKGD2DQDC23OGBNOBX8AFJFPNKP = Internal.createForeignKey(ExtensionReview.EXTENSION_REVIEW, DSL.name("fkgd2dqdc23ogbnobx8afjfpnkp"), new TableField[] { ExtensionReview.EXTENSION_REVIEW.EXTENSION_ID }, Keys.EXTENSION_PKEY, new TableField[] { Extension.EXTENSION.ID }, true);
    public static final ForeignKey<ExtensionReviewRecord, UserDataRecord> EXTENSION_REVIEW__FKINJBN9GRK135Y6IK0UT4UJP0W = Internal.createForeignKey(ExtensionReview.EXTENSION_REVIEW, DSL.name("fkinjbn9grk135y6ik0ut4ujp0w"), new TableField[] { ExtensionReview.EXTENSION_REVIEW.USER_ID }, Keys.USER_DATA_PKEY, new TableField[] { UserData.USER_DATA.ID }, true);
    public static final ForeignKey<ExtensionVersionRecord, PersonalAccessTokenRecord> EXTENSION_VERSION__FK70KHJ8PM0VACASUIIAQ0W0R80 = Internal.createForeignKey(ExtensionVersion.EXTENSION_VERSION, DSL.name("fk70khj8pm0vacasuiiaq0w0r80"), new TableField[] { ExtensionVersion.EXTENSION_VERSION.PUBLISHED_WITH_ID }, Keys.PERSONAL_ACCESS_TOKEN_PKEY, new TableField[] { PersonalAccessToken.PERSONAL_ACCESS_TOKEN.ID }, true);
    public static final ForeignKey<ExtensionVersionRecord, ExtensionRecord> EXTENSION_VERSION__FKKHS1EC9S9J08FGICQ9PMWU6BT = Internal.createForeignKey(ExtensionVersion.EXTENSION_VERSION, DSL.name("fkkhs1ec9s9j08fgicq9pmwu6bt"), new TableField[] { ExtensionVersion.EXTENSION_VERSION.EXTENSION_ID }, Keys.EXTENSION_PKEY, new TableField[] { Extension.EXTENSION.ID }, true);
    public static final ForeignKey<FileResourceRecord, ExtensionVersionRecord> FILE_RESOURCE__FILE_RESOURCE_EXTENSION_FKEY = Internal.createForeignKey(FileResource.FILE_RESOURCE, DSL.name("file_resource_extension_fkey"), new TableField[] { FileResource.FILE_RESOURCE.EXTENSION_ID }, Keys.EXTENSION_VERSION_PKEY, new TableField[] { ExtensionVersion.EXTENSION_VERSION.ID }, true);
    public static final ForeignKey<NamespaceMembershipRecord, NamespaceRecord> NAMESPACE_MEMBERSHIP__FKGFHWHKNULA6DO2N6WYVQETM3N = Internal.createForeignKey(NamespaceMembership.NAMESPACE_MEMBERSHIP, DSL.name("fkgfhwhknula6do2n6wyvqetm3n"), new TableField[] { NamespaceMembership.NAMESPACE_MEMBERSHIP.NAMESPACE }, Keys.NAMESPACE_PKEY, new TableField[] { Namespace.NAMESPACE.ID }, true);
    public static final ForeignKey<NamespaceMembershipRecord, UserDataRecord> NAMESPACE_MEMBERSHIP__FKNSAMEKUTXYWVSB3S1MJDCJKYP = Internal.createForeignKey(NamespaceMembership.NAMESPACE_MEMBERSHIP, DSL.name("fknsamekutxywvsb3s1mjdcjkyp"), new TableField[] { NamespaceMembership.NAMESPACE_MEMBERSHIP.USER_DATA }, Keys.USER_DATA_PKEY, new TableField[] { UserData.USER_DATA.ID }, true);
    public static final ForeignKey<NamespaceSocialLinksRecord, NamespaceRecord> NAMESPACE_SOCIAL_LINKS__NAMESPACE_SOCIAL_LINKS_FKEY = Internal.createForeignKey(NamespaceSocialLinks.NAMESPACE_SOCIAL_LINKS, DSL.name("namespace_social_links_fkey"), new TableField[] { NamespaceSocialLinks.NAMESPACE_SOCIAL_LINKS.NAMESPACE_ID }, Keys.NAMESPACE_PKEY, new TableField[] { Namespace.NAMESPACE.ID }, true);
    public static final ForeignKey<PersistedLogRecord, UserDataRecord> PERSISTED_LOG__PERSISTED_LOG_USER_DATA_FKEY = Internal.createForeignKey(PersistedLog.PERSISTED_LOG, DSL.name("persisted_log_user_data_fkey"), new TableField[] { PersistedLog.PERSISTED_LOG.USER_DATA }, Keys.USER_DATA_PKEY, new TableField[] { UserData.USER_DATA.ID }, true);
    public static final ForeignKey<PersonalAccessTokenRecord, UserDataRecord> PERSONAL_ACCESS_TOKEN__FKTQJVMHOIG3WTTJ6DL1IBCAJ3L = Internal.createForeignKey(PersonalAccessToken.PERSONAL_ACCESS_TOKEN, DSL.name("fktqjvmhoig3wttj6dl1ibcaj3l"), new TableField[] { PersonalAccessToken.PERSONAL_ACCESS_TOKEN.USER_DATA }, Keys.USER_DATA_PKEY, new TableField[] { UserData.USER_DATA.ID }, true);
    public static final ForeignKey<SpringSessionAttributesRecord, SpringSessionRecord> SPRING_SESSION_ATTRIBUTES__SPRING_SESSION_ATTRIBUTES_FK = Internal.createForeignKey(SpringSessionAttributes.SPRING_SESSION_ATTRIBUTES, DSL.name("spring_session_attributes_fk"), new TableField[] { SpringSessionAttributes.SPRING_SESSION_ATTRIBUTES.SESSION_PRIMARY_ID }, Keys.SPRING_SESSION_PK, new TableField[] { SpringSession.SPRING_SESSION.PRIMARY_ID }, true);
}
