/*
 * This file is generated by jOOQ.
 */
package org.eclipse.openvsx.jooq.tables.records;


import java.time.LocalDateTime;

import org.eclipse.openvsx.jooq.tables.PersonalAccessToken;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonalAccessTokenRecord extends UpdatableRecordImpl<PersonalAccessTokenRecord> implements Record7<Long, LocalDateTime, Boolean, LocalDateTime, String, String, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.personal_access_token.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.personal_access_token.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.personal_access_token.accessed_timestamp</code>.
     */
    public void setAccessedTimestamp(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.personal_access_token.accessed_timestamp</code>.
     */
    public LocalDateTime getAccessedTimestamp() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>public.personal_access_token.active</code>.
     */
    public void setActive(Boolean value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.personal_access_token.active</code>.
     */
    public Boolean getActive() {
        return (Boolean) get(2);
    }

    /**
     * Setter for <code>public.personal_access_token.created_timestamp</code>.
     */
    public void setCreatedTimestamp(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.personal_access_token.created_timestamp</code>.
     */
    public LocalDateTime getCreatedTimestamp() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.personal_access_token.description</code>.
     */
    public void setDescription(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.personal_access_token.description</code>.
     */
    public String getDescription() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.personal_access_token.value</code>.
     */
    public void setValue(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.personal_access_token.value</code>.
     */
    public String getValue() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.personal_access_token.user_data</code>.
     */
    public void setUserData(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.personal_access_token.user_data</code>.
     */
    public Long getUserData() {
        return (Long) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, LocalDateTime, Boolean, LocalDateTime, String, String, Long> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, LocalDateTime, Boolean, LocalDateTime, String, String, Long> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return PersonalAccessToken.PERSONAL_ACCESS_TOKEN.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return PersonalAccessToken.PERSONAL_ACCESS_TOKEN.ACCESSED_TIMESTAMP;
    }

    @Override
    public Field<Boolean> field3() {
        return PersonalAccessToken.PERSONAL_ACCESS_TOKEN.ACTIVE;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return PersonalAccessToken.PERSONAL_ACCESS_TOKEN.CREATED_TIMESTAMP;
    }

    @Override
    public Field<String> field5() {
        return PersonalAccessToken.PERSONAL_ACCESS_TOKEN.DESCRIPTION;
    }

    @Override
    public Field<String> field6() {
        return PersonalAccessToken.PERSONAL_ACCESS_TOKEN.VALUE;
    }

    @Override
    public Field<Long> field7() {
        return PersonalAccessToken.PERSONAL_ACCESS_TOKEN.USER_DATA;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getAccessedTimestamp();
    }

    @Override
    public Boolean component3() {
        return getActive();
    }

    @Override
    public LocalDateTime component4() {
        return getCreatedTimestamp();
    }

    @Override
    public String component5() {
        return getDescription();
    }

    @Override
    public String component6() {
        return getValue();
    }

    @Override
    public Long component7() {
        return getUserData();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getAccessedTimestamp();
    }

    @Override
    public Boolean value3() {
        return getActive();
    }

    @Override
    public LocalDateTime value4() {
        return getCreatedTimestamp();
    }

    @Override
    public String value5() {
        return getDescription();
    }

    @Override
    public String value6() {
        return getValue();
    }

    @Override
    public Long value7() {
        return getUserData();
    }

    @Override
    public PersonalAccessTokenRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PersonalAccessTokenRecord value2(LocalDateTime value) {
        setAccessedTimestamp(value);
        return this;
    }

    @Override
    public PersonalAccessTokenRecord value3(Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public PersonalAccessTokenRecord value4(LocalDateTime value) {
        setCreatedTimestamp(value);
        return this;
    }

    @Override
    public PersonalAccessTokenRecord value5(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public PersonalAccessTokenRecord value6(String value) {
        setValue(value);
        return this;
    }

    @Override
    public PersonalAccessTokenRecord value7(Long value) {
        setUserData(value);
        return this;
    }

    @Override
    public PersonalAccessTokenRecord values(Long value1, LocalDateTime value2, Boolean value3, LocalDateTime value4, String value5, String value6, Long value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PersonalAccessTokenRecord
     */
    public PersonalAccessTokenRecord() {
        super(PersonalAccessToken.PERSONAL_ACCESS_TOKEN);
    }

    /**
     * Create a detached, initialised PersonalAccessTokenRecord
     */
    public PersonalAccessTokenRecord(Long id, LocalDateTime accessedTimestamp, Boolean active, LocalDateTime createdTimestamp, String description, String value, Long userData) {
        super(PersonalAccessToken.PERSONAL_ACCESS_TOKEN);

        setId(id);
        setAccessedTimestamp(accessedTimestamp);
        setActive(active);
        setCreatedTimestamp(createdTimestamp);
        setDescription(description);
        setValue(value);
        setUserData(userData);
        resetChangedOnNotNull();
    }
}
